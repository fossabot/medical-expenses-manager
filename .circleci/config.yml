version: 2.1 # use CircleCI 2.1

common_env: &common_env
  BUNDLE_JOBS: 3
  BUNDLE_RETRY: 3
  BUNDLE_PATH: vendor/bundle
  RAILS_ENV: test
  TZ: 'Asia/Tokyo'

executors:
  latest:
    docker:
      - image: circleci/ruby:latest
    environment:
      <<: *common_env
  node-browsers-2-5:
    docker:
      - image: circleci/ruby:2.5-node-browsers
    environment:
      <<: *common_env
  node-browsers-2-6:
    docker:
      - image: circleci/ruby:2.6-node-browsers
    environment:
      <<: *common_env
  node-browsers-latest:
    docker:
      - image: circleci/ruby:latest-node-browsers
    environment:
      <<: *common_env
commands:
  update_rubygems:
    steps:
      - run:
          name: Setup RubyGems and Bundler
          command: |-
            sudo gem update --system
  which_bundler:
    steps:
      - run:
          name: Which bundler?
          command: bundle -v
  which_ruby:
    steps:
      - run:
          name: Which Ruby?
          command: ruby -v
  # Restore bundle cache
  # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
  restore_gems:
    steps:
      - restore_cache:
          keys:
            - bundle-v2-{{ checksum "Gemfile.lock" }}
            - bundle-v2-
  # Install Ruby dependencies
  install_gems:
    steps:
      - run:
          name: Bundle Install
          command: bundle check || bundle install
  # Store bundle cache for Ruby dependencies
  save_gems:
    steps:
      - save_cache:
          key: bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  setup_database:
    steps:
      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace
  store_test_reports:
    steps:
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test/reports

minitest_steps: &minitest_steps
  - checkout
  - update_rubygems
  - which_bundler
  - which_ruby
  - restore_gems
  - install_gems
  - save_gems
  - setup_database
  - run:
      name: Run minitest
      command: |-
        bundle exec rails test
  - store_test_reports
system_test_steps: &system_test_steps
  - checkout
  - update_rubygems
  - which_bundler
  - which_ruby
  - restore_gems
  - install_gems
  - save_gems
  - setup_database
  - run:
      name: Run system test
      command: |-
        bundle exec rails test:system
  - store_test_reports
  - store_artifacts:
      path: tmp/screenshots

jobs: # a collection of steps
  brakeman:
    executor: latest
    steps:
      - checkout
      - update_rubygems
      - which_bundler
      - which_ruby
      - restore_gems
      - install_gems
      - save_gems
      - run:
          name: Run Brakeman
          command: |-
            bundle exec brakeman
  minitest-2-5:
    executor: node-browsers-2-5
    steps:
      *minitest_steps
  system-test-2-5:
    executor: node-browsers-2-5
    steps:
      *system_test_steps
  minitest-2-6:
    executor: node-browsers-2-6
    steps:
      *minitest_steps
  system-test-2-6:
    executor: node-browsers-2-6
    steps:
      *system_test_steps

workflows:
  version: 2.1
  brakeman:
    jobs:
      - brakeman
  ruby-2.5-test:
    jobs:
      - minitest-2-5
      - system-test-2-5
  ruby-2.6-test:
    jobs:
      - minitest-2-6
      - system-test-2-6
